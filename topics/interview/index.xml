<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bobble Law</title><link>https://bobblelaw.github.io/topics/interview/</link><description>Recent content on Bobble Law</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Sun, 20 Nov 2022 22:52:56 +0800</lastBuildDate><atom:link href="https://bobblelaw.github.io/topics/interview/index.xml" rel="self" type="application/rss+xml"/><item><title>SLAM Interview Questions</title><link>https://bobblelaw.github.io/topics/interview/slam-interview/</link><pubDate>Thu, 27 Oct 2022 16:37:56 +0800</pubDate><guid>https://bobblelaw.github.io/topics/interview/slam-interview/</guid><description>&lt;h2 id="linear-algebra">Linear Algebra&lt;/h2>
&lt;ul>
&lt;li>如何求解 $Ax=b$？SVD和QR分解哪个更快？&lt;/li>
&lt;/ul>
&lt;p>Depend on the rank of $[A | b]$.&lt;/p>
&lt;p>Solution include QR decomposition, LTLD decomposition, Cholesky decomposition and SVD decomposition.&lt;/p>
&lt;h2 id="optimization-basics">Optimization Basics&lt;/h2>
&lt;ul>
&lt;li>Explain Gradient descent, Gaussian-Newton, LM, Dogleg&lt;/li>
&lt;/ul>
&lt;h2 id="computer-vision-basics">Computer Vision Basics&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>SIFT vs. SURF&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Parallax and depth&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>$ \frac{parallax}{baseline} = \frac{focal~ length}{depth} $&lt;/p>
&lt;ul>
&lt;li>Edge detection algorithms&lt;/li>
&lt;/ul>
&lt;p>Filtering, augmentation, and detection. Gaussian filter and some handcrafted kernel to locate pixel gradient.&lt;/p>
&lt;ol>
&lt;li>Canny&lt;/li>
&lt;li>Sobel&lt;/li>
&lt;li>Laplacian&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Hoffman transform&lt;/li>
&lt;/ul>
&lt;h2 id="3d-basics">3D Basics&lt;/h2>
&lt;ul>
&lt;li>如何对匹配好的点做进一步的处理，已到达更好的效果？&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>Compare the distance with experienced threshold&lt;/li>
&lt;li>RANSAC&lt;/li>
&lt;li>KNN&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>Explain RANSAC&lt;/p></description></item><item><title/><link>https://bobblelaw.github.io/topics/interview/cpp-interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bobblelaw.github.io/topics/interview/cpp-interview/</guid><description>&lt;h1 id="cpp-interview-questions">Cpp Interview Questions&lt;/h1></description></item><item><title/><link>https://bobblelaw.github.io/topics/interview/leetcode-top-interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bobblelaw.github.io/topics/interview/leetcode-top-interview/</guid><description>&lt;h1 id="leetcode-top-interview-questions">LeetCode Top Interview Questions&lt;/h1>
&lt;h2 id="top-150">Top 150&lt;/h2>
&lt;h3 id="array--string">Array &amp;amp; String&lt;/h3>
&lt;h4 id="88-merge-sorted-array">88. Merge Sorted Array&lt;/h4>
&lt;ul>
&lt;li>Two pointers, all start from the end&lt;/li>
&lt;li>Iterate from the end as well&lt;/li>
&lt;li>Copy the rest&lt;/li>
&lt;/ul>
&lt;h4 id="27-remove-item">27. Remove Item&lt;/h4>
&lt;p>two pointers, one tracks valid number, one iterates.&lt;/p>
&lt;h4 id="26-remove-duplicates-from-sorted-array">26. Remove Duplicates from Sorted Array&lt;/h4>
&lt;p>two pointers, one tracks concecutive duplicated, one iterates.&lt;/p>
&lt;h4 id="80-remove-duplicates-from-sorted-array-ii">80. Remove Duplicates from Sorted Array II&lt;/h4>
&lt;p>Similar to 26, the starting point and &lt;code>if&lt;/code> condition are different. Generalize to max k duplicated.&lt;/p></description></item><item><title/><link>https://bobblelaw.github.io/topics/interview/ml-interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bobblelaw.github.io/topics/interview/ml-interview/</guid><description>&lt;h1 id="machine-learning-interview">Machine Learning Interview&lt;/h1></description></item></channel></rss>